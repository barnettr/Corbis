<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 9.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="1.36">
 <Targets>
  <Target Name="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\bin\Debug\Corbis.Web.Analytics.dll">
   <Modules>
    <Module Name="corbis.web.analytics.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Corbis.Web.Analytics.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Corbis.Web.Analytics">
       <Types>
        <Type Name="AnalyticsHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LogWebAnalyticsEvent(Corbis.Web.Entities.AnalyticsLoggingLocation,Corbis.WebAnalytics.Contracts.V1.EventType,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\src" File="AnalyticsHelper.cs" Line="53">Modify 'AnalyticsHelper.LogWebAnalyticsEvent(AnalyticsLoggingLocation, EventType, Dictionary&lt;string, string&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AnalyticsProcessingProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'AnalyticsProcessingProvider' to protected.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CorbisAnalyticsProcessingProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ProcessAnalytics(Corbis.WebAnalytics.Contracts.V1.EventType,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\src" File="CorbisAnalyticsProcessingProvider.cs" Line="33">Because the behavior of 'string.Compare(string, string, bool)' could vary based on the current user's locale settings, replace this call in 'CorbisAnalyticsProcessingProvider.ProcessAnalytics(EventType, Dictionary&lt;string, string&gt;)' with a call to 'string.Compare(string, string, bool, CultureInfo)'. If the result of 'string.Compare(string, string, bool, CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\src" File="CorbisAnalyticsProcessingProvider.cs" Line="33">'CorbisAnalyticsProcessingProvider.ProcessAnalytics(EventType, Dictionary&lt;string, string&gt;)' makes a call to 'string.Compare(string, string, bool)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.Compare(string, string, StringComparison)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OmnitureAnalyticsProcessingProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Omniture" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Omniture' in type name 'OmnitureAnalyticsProcessingProvider'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetScriptManager(System.Web.UI.Page)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\src" File="OmnitureAnalyticsProcessingProvider.cs" Line="33">'OmnitureAnalyticsProcessingProvider.GetScriptManager(Page)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\src" File="OmnitureAnalyticsProcessingProvider.cs" Line="33">The 'this' parameter (or 'Me' in Visual Basic) of 'OmnitureAnalyticsProcessingProvider.GetScriptManager(Page)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2009-05-26 13:23:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\TFS\Sustainment\DEV\Corbis.Web\src\Utilities\Corbis.Web.Analytics\src" File="OmnitureAnalyticsProcessingProvider.cs" Line="38">'OmnitureAnalyticsProcessingProvider.GetScriptManager(Page)' makes a call to 'string.IndexOf(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.IndexOf(string, StringComparison)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182126(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182264(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182137(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb264492(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182156(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms245046(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/ms182189(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a StringComparison. This should be replaced with a call to {2}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/library/bb386080(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="9.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
